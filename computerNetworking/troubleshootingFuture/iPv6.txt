> IPv6 ADDRESSING AND SUBNETTING 
Time for some real talk. Here's the hard truth. The IANA is out of IP addresses. When IPv4 was first developed, a 32-bit number was chosen to represent the address for a node on a network. The Internet was in its infancy, and no one really expected it to explode in popularity the way it has. 32-bits were chosen, but it's just not enough space for the number of Internet connected devices we have in the world. IPv6 was developed exactly because of this issue. By the mid 1990s, it was more and more obvious that we were going to run out of IPv4 address space at some point, so a new Internet Protocol was developed. Internet Protocol version 6, or IPv6. You might wonder what happened to version 5, or IPv5. It's actually a fun bit of trivia. IPv5 was an experimental protocol that introduced the concept of connections. It never really saw wide adoption, and connection state was handled better later on by the transport layer and TCP. Even though IPv5 is mostly a relic of history, when development of IPv6 started, the consensus was to not reuse the IPv5 name. The biggest difference between IPv4 and IPv6 is the number of bits reserved for an address, while IPv4 addresses are 32 bits, meaning there can be around 4.2 billion individual addresses. IPv6 addresses are 128 bits in size. This size difference is staggering, once you do the math. Don't worry, we won't make you.
Play video starting at :1:50 and follow transcript1:50
2 to the power of 128 would produce a 39 digit long number. That number range has a name you've probably never even heard of, an Undecillion. An Undecillion isn't a number you hear a lot, because it's ginormous. There really aren't things that exist at that scale. Some guesses on the total number of atoms that make up the entire planet Earth and every single thing on it get into that number range. That should tell you we're talking about a very, very large number. If we can give every atom on Earth its own IP address, we'll probably be okay when it comes to network devices for a very long time. Just for fun, let's look at what that number actually looks like. It looks like this. Whoa, mind blowing, right? Just like how an IPv4 address is really just a 32-bit binary number, IPv6 addresses are really just one 28-bit binary numbers. IPv4 addresses are written out in four octets of decimal numbers, just to make them a little more readable for humans. But trying to do the same for an IPv6 address just wouldn't work. Instead, IPv6 addresses are usually written out as 8 groups of 16-bits each. Each one of these groups is further made up of four hexadecimal numbers. A full IPv6 address might look something like this.
Play video starting at :3:17 and follow transcript3:17
That's still way too long, so IPv6 has a notation method that lets us break that down even more.
Play video starting at :3:26 and follow transcript3:26
A way to show how many IPv6 addresses there are is by looking at our example IP. Every single IPv6 address that begins with 2001:0db8 has been reserved for documentation, in education, or for books and courses, just like this one. That's over 18 quintillion addresses, much larger than the entire IPv4 address space reserved just for this purpose. There are two rules when it comes to shortening an IPv6 address. The first is that you can remove any leading zeros from a group. The second is that any number of consecutive groups composed of just zeros can be replaced with two colons. I should call out that this can only happen once for any specific address. Otherwise, you couldn't know exactly how many zeros were replaced by the double colons. For this IP, we could apply the first rule, and remove all leading zeros from each group. This would leave us with this.
Play video starting at :4:31 and follow transcript4:31
Once we apply the second rule, which is to replace consecutive sections containing just zeros with two colons, we'll end up with this. This still isn't as readable as an IPv4 address, but it's a good system that helps reduce the length a little bit. We can see this approach taken to the extreme with IPv6 loopback address. You might remember that with IPv4, this address is 127.0.0.1. With IPv6, the loopback address is 31 0s with a 1 at the end, which can be condensed all the way down to just ::1. The IPv6 address space has several other reserved address ranges, besides just the one reserved for documentation purposes, or the loopback address. For example, any address that begins with FF00:: is used for multicast, which is a way of addressing groups of hosts all at once. It's also good to know that addresses beginning with FE80:: are used for link-local unitcast. Link-local unicast addresses allow for local network segment communications, and are configured based upon a host's MAC address. The link-local address are used by an IPv6 hosts to receive their network configuration, which is a lot like how DHCP works. The host's MAC address is run through an algorithm to turn it from a 48-bit number into a unique 64-bit number. It's then inserted into the addresses host ID. The IPv6 address space is so huge, there was never any need to think about splitting it up into address classes like we used to do with IPv4. From the very beginning, an IPv6 address had a very simple line between network ID and host ID. The first 64-bits of any IPv6 address is the network ID, and the second 64-bits of any IPv6 address is the host ID. This means that any given IPv6 network has space for over 9 quintillion hosts. Still, sometimes network engineers might want to split up their network for administrative purposes. IPv6 subnetting uses the same CIDR notation that you're already familiar with. This is used to define a subnet mask against the network ID portion of an IPv6 address.

> IPv6 HEADERS 
When IPv6 was being developed, they took the time to introduce a few improvements instead of just figuring out a way to increase the address size. This should come as a relief to you, and IT support specialists love networks that perform well.
Play video starting at ::25 and follow transcript0:25
One of the most elegant improvements was made to the IPv6 header, which is much simpler than the IPv4 one. The first field in an IPv6 header is the version field. This is a 4-bit field that defines what version of IP is in use. You might remember that an IPv4 header begins with this exact same field.
Play video starting at ::48 and follow transcript0:48
The next field is called the traffic class field. This is an 8-bit field that defines the type of traffic contained within the IP datagram and allows for different classes of traffic to receive different priorities. The next field is the flow label field. This is a 20-bit field that's used in conjunction with the traffic class field for routers to make decisions about the quality of service level for a specific datagram. Next you have the payload length field. This is a 16-bit field that defines how long the data payload section of the datagram is. Then you have the next header field. This is a unique concept to IPv6, and needs a little extra explanation. IPv6 addresses are four times as long as IPv4 addresses. That means they have more ones and zeros, which means that they take longer to transmit across a link. To help reduce the problems with additional data that IPv6 addresses impose on the network, the IPv6 header was built to be as short as possible. One way to do that is to take all of the optional fields and abstract them away from the IPv6 header itself. The next header field defines what kind of header is immediately after this current one. These additional headers are optional, so they're not required for a complete IPv6 datagram. Each of these additional optional headers contain a next header field and allow for a chain of headers to be formed if there's a lot of optional configuration.
Play video starting at :2:24 and follow transcript2:24
Next we have what's called the hop limit field. This is an 8-bit field that's identical in purpose to the TTL field in an IPv4 header. Finally, we have the source and destination address fields, which are each a 128 bits. If the next header field specified another header, it would follow at this time. If not, a data payload the same length as specified in the payload length field would follow.

> IPv6 AND IPv4 HARMONY 
It's just not possible for the entire Internet and all connected networks to switch to IPv6 all at once. There would be way too much coordination at play. Too many old devices that might not even know how to speak IPv6 at all, still requiring connections. So the only way IPv6 will ever take hold is to develop a way for IPv6 and IPv4 traffic to coexist at the same time. This would let individual organizations make the transition when they can.
Play video starting at ::42 and follow transcript0:42
One example of how this can work is with what's known as IPv4 mapped address space. The IPv6 specifications have set aside a number of addresses that can be directly correlated to an IPv4 address. Any IPv6 address that begins with 80 zeros, and is then followed by 16 ones is understood to be part of the IPv4 mapped address space. The remaining 32 bits of the IPv6 address is just the same 32 bits of the IPv4 address it's meant to represent. This gives us a way for IPv4 traffic to travel over an IPv6 network. But probably more important is for IPv6 traffic to have a way to travel over IPv4 networks. It's easier for an individual organization to make the move to IPv6 than it is for the networks at the core of the Internet to. So while IPv6 adoption becomes more widespread, it'll need a way to travel over the old IPv4 remnants of the Internet backbone.
Play video starting at :1:49 and follow transcript1:49
The primary way this is achieve today is through IPv6 tunnels. IPv6 tunnels are conceptually pretty simple. They consist of IPv6 tunnels servers on either end of a connection. These IPv6 tunnel servers take incoming IPv6 traffic and encapsulate it within traditional IPv4 datagrams. This is then delivered across the IPv4 Internet space where it's received by another IPv6 tunnel server. That server performs the de-encapsulation and passes the IPv6 traffic further along in the network. Along with IPv6 tunnel technologies, the concept of an IPv6 tunnel broker has also emerged. These are companies that provide IPv6 tunneling endpoints for you, so you don't have to introduce additional equipment to your network.
Play video starting at :2:39 and follow transcript2:39
There are a lot of competing protocols to be used for these kinds of IPv6 tunnels. Since this is still a new and evolving space, it's not clear who the winner will be. I've left you with some links to read about the main competitors right after this video. It doesn't really matter which tunneling technology ends up becoming the most common solution. It'll probably fade away in time itself.
Play video starting at :3:2 and follow transcript3:02
The future of networking is the adoption of IPv6 as the main protocol at the network layer, and one day we won't need any tunnels at all. The future is limitless, and tunnelless, or something like that.
Play video starting at :3:16 and follow transcript3:16
You've done an amazing job at getting through all this information. So take some time to pat yourself on the back. You've got one final quiz and a final project to get through. And then you can check this course off your to do list. Are you starting to see the light at the end of the tunnel?

> INTERVIEW ROLE PLAY: NETWORKING 
All right. So for this scenario, let's say that you're working at help desk for a global company, and you get a call first thing in the morning from a user in a remote office. They sound panicked and they tell you that the network is down in their office, what do you do? I always assure the user that I'll be able to help them out, and then I will also want to know the network outage symptoms. So, are you receiving a error message? Yeah. Let's say that I just open up my laptop and I tried to access one of our internal websites. I get an error message and it says, "Page can't be displayed". Okay. Do you know of any other users who are having this issue? No. I'm not sure. It's first thing in the morning and I'm the first one here. Okay. Can you actually give me the name of the website, I'd like to test it out on my computer. Sure. The URL for the internal website is intranet.companyx.com. Okay, thanks. So, I'm going to test that out. All right, and let's say that it loads up finders for you. Okay. So, now I want you to try out external website, so maybe try google.com. Okay. So, I get the same result on google.com. Page can't be displayed. Okay. Which OS are you using? Let's say I'm using Windows 7. Okay. So, I want you to navigate to the command prompt. So, a way you could do that is just going to the "Start" menu and search "CMD". Okay. So, let's say I launch that, I have my black command prompt window open. Okay. So now, can you run the command Ipconfig/all? Okay. I do that and I see a bunch of things, I see IP address, Default Gateway, DNS, and I'm a curious user. So, can you explain to me what all those things mean? Yes. So, IP address is a unique numerical address, given to computing devices to communicate on the Internet to other computers. Default Gateway serves as an access point that's used by computers to share information to another computer or on the internet, so that could be like a router. DNS is Domain Name System, so that translate domain names into the IP addresses. Okay, great. So, let's say I redo all this info and I tell you my IP address is 192.something.something, but you know that our network only uses addresses in the range of 172.something.something. Does that mean anything? Yeah. So, does this machine use DHCP? It does. But since you brought that up, can you explain to me what DHCP is? Yes. So, Dynamic Host Configuration Protocol automatically assigns IP addresses to the computing devices, and it can also send network configurations too. Why would that be important in this scenario? So, this'll be important just because if the IP addresses is getting assigned statically, then we have to go in and change it, but it should begin to assign automatically. All right. So, back to our scenario, what are some reasons I might be getting the wrong IP address from DHCP? DHCP can be configured incorrectly or you could be connected to the wrong network. So, let's start with the most simple explanation. How can we check what network I'm connected to? Do you know if you're connected to a wired or wireless network? I'm on my laptop, so I'm on wireless. Okay. So, if you're on wireless, let's go to the bottom right corner and click on the Wi-Fi symbol, and then go on to network preferences, just to see what network you're actually connected to. All right, and when I do that, you're right. I'm connecting to some random network across the street, and once I switch back to our corporate wireless, it seems to solve the issue. I guess the network wasn't down after all, good job. In this scenario, we saw a great example of asking clarifying questions. Problem started with the user saying that the network was down. But that can actually mean many things. It's important to figure out what exactly is going wrong before we start trying to fix things? We also saw a few examples of having to explain the terms we use during the interview. If you use a term like DNS or DHCP, it's important that you know what it means and how it might be relevant. That's it for now. See you again at the end of the next course.

