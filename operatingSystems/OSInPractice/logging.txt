> SYSTEM MONITORING 
Remember from the first course in our program, Technical Support Fundamentals, that we introduced the concept of logs? A log is like your computer's diary, it records events that happen on your system.
Play video starting at ::23 and follow transcript0:23
What kind of events, well, pretty much everything. Like when your system shuts down, when it starts up, when a driver's loaded, when someone logs in. All of these things can be written to a log. It's also written with a lot of detail. Logs tell you the exact time that an event occurred, who caused the event, and more.
Play video starting at ::41 and follow transcript0:41
We'll be looking into some sample log snippets in the upcoming lessons to get a better sense of how to read one. The act of creating log events is called logging. Your system does a pretty good job of logging events right out of the box. In most systems, there is a service that runs in the background and constantly writes events to logs. These systems are customizable so you can log any specific field you want, but by default it logs all the essentials.
Play video starting at :1:7 and follow transcript1:07
By the end of this lesson, you'll learn where all the important logs are kept on the Windows and Linux OSes.
Play video starting at :1:14 and follow transcript1:14
You'll also learn how to read a log and utilize common troubleshooting practices when it comes to logs. When you're working in IT support, you'll need to gather as much data as you can to troubleshoot an issue.
Play video starting at :1:25 and follow transcript1:25
Logs tell us important things like errors that occurred, changes that were made, etc. They are a reliable source of information.

> THE WINDOWS EVENT VIEWER 
Similar to how we can jot down our life events in a journal, events are also logged on our machines. In Windows, the events logged by the operating system are stored in an application called the Event Viewer. Whether you're trying to figure out why a computer game keeps crashing, or troubleshooting login or access problems, or just satisfying your curiosity about what's going on in your system, the Event Viewer is a great first stop.
Play video starting at ::35 and follow transcript0:35
Let's take a look at some of the information it collects, and how you can use the Event Viewer to get answers you're looking for. You can launch the Event Viewer either from the start menu or by typing in eventvwr.msc from the run box.
Play video starting at ::56 and follow transcript0:56
The default view of the Event Viewer shows is a summary of potentially important recent events. In our case, this isn't super interesting, since we're more concerned with any issues that occurred. Instead, let's take a look at the left-hand pane, where we can see a few different event groupings.
Play video starting at :1:16 and follow transcript1:16
The first group we see is called Custom Views. The Event Viewer records a lot of information about the system. So it can sometimes be a little difficult to tease out the signal, like recent events, from the noise or the stuff you don't care about.
Play video starting at :1:30 and follow transcript1:30
This is where the concept of custom views comes in handy.
Play video starting at :1:34 and follow transcript1:34
With a custom view, you can create a filter that will look across all the event logs the Event Viewers know about and tease out just the information you're interested in.
Play video starting at :1:44 and follow transcript1:44
Let's say we wanted to only see events of error, severity or higher that we're logged in the last hour. To do this, Google create custom view options in right-hand actions pane.
Play video starting at :1:57 and follow transcript1:57
This will bring up a tab called Filter.
Play video starting at :2: and follow transcript2:00
From there, click the error and critical checkboxes.
Play video starting at :2:4 and follow transcript2:04
We're going to change the logged drop down menu to last hour.
Play video starting at :2:9 and follow transcript2:09
In the Event logs, we're going to select just are just the Windows Logs, then click OK.
Play video starting at :2:15 and follow transcript2:15
Then we're going to give our view a new name.
Play video starting at :2:21 and follow transcript2:21
Click OK once more.
Play video starting at :2:23 and follow transcript2:23
Once you're done, you'll see a new view come up under custom menus, where only the events that matched your filter are displayed. The other two categories of logs you'll see in the left-hand navigation page are Windows Logs and Application and Services.
Play video starting at :2:41 and follow transcript2:41
The Windows Logs categories contain event logs that are generally applied to the whole operating system.
Play video starting at :2:47 and follow transcript2:47
Let's say you're having an issue with a driver failing during startup. The log called System would be a good place to start. If you want to see whose been accessing the computer, then you begin investigating the Security log.
Play video starting at :3:4 and follow transcript3:04
The other category is called Applications and Services Logs. This category contains logs that track events from a single application, or operating system component, instead of the system wide events of the Windows logs category. For example, if you're having trouble with PowerShell and wanted to get more information about it, checking out the PowerShell log under Applications and Services log would be a great first step.
Play video starting at :3:30 and follow transcript3:30
Regardless of its category, each line in a given log in the Event Viewer represents an event. Each event contains information grouped in columns about the event like the login level.
Play video starting at :3:41 and follow transcript3:41
Information is the lowest level and critical is the highest. You could also find the Date and Time the event occurred.
Play video starting at :3:49 and follow transcript3:49
Selecting an event will bring up more detailed information in the bottom pane of the Event Viewer.
Play video starting at :3:59 and follow transcript3:59
This can help you dig into troubleshooting or even give you context for a bug report.
Play video starting at :4:4 and follow transcript4:04
The Event Viewer is a super helpful tool for IT support specialists. It can provide you with a lot of really detailed information about the problems any software or hardware might be experiencing on your system.
Play video starting at :4:16 and follow transcript4:16
There's a lot of information in there though. So don't forget about its custom views and filtering capabilities. More importantly, don't hesitate to poke around the tool and get used to finding things in its interface. You'll have fun and you'll learn a lot.
Play video starting at :4:30 and follow transcript4:30
Next stop, the wild world of Linux logs.

> LINUX LOGS 
Logs in Linux are stored in the /var/log directory. Remember that /var directory stands for variable, meaning, files that constantly change are kept in this directory, and it turns out that logs are constantly changing. If we look at the /var/log directory with an LS, it might seem a little intimidating. Don't worry. Each of these log files store specific information that we can figure out by their file names. Let's check out some of the common ones you'll look at, /var/log/auth.log, authorization and security-related events are logged here. /var/log/kern.log, kernel messages are logged here. /var/log/dmesg, system startup messages are logged here. If you encounter an issue at, let's say, boot up, this is a good place to check for information. It might get a little tiresome to open up each of these log files to find information about events. Luckily, there are also log files that combine the information of other log files. The downside is that these files are usually very large. If you have a pretty good idea of where a problem might lie, you might want to opt for the smaller and more specific log file. The one log file that logs pretty much everything on your system is a /var/log/syslog file. The only thing that sys log doesn't log by default are off events. When troubleshooting issues with user machines, /var/log/syslog will usually contain the most comprehensive information about your system, so that should be your first stop. Log files output a lot of events. By that logic, they take up a lot of data that has to be stored on our machine somewhere. We generally just want to see the latest events on our system, so we don't need to overload or disk with all this information. Luckily, our systems also do a good job of cleaning out log files to make room for new ones. They use something called log rotation to do this. In Linux, the utility rotate logs is called log rotate. You might want to investigate an event that happened a month ago, so you can change your log rotation settings to make sure not to delete events that are that old. We won't discuss how to work with log rotation, but you can read more about it in the supplemental reading. We've talked about logging in the context of a single machine, but if you find yourself managing many systems and want to be able to parse their logs in one central location, you can use something called centralized logging. We won't talk about how to do this, but if you're interested in setting up a centralized server, check out the next supplemental reading. Okay, enough talk about what logs are. Let's actually look at some real ones. Whoa, this looks super intimidating. But don't worry, we're not going to be reading all of this. In the next lesson, we'll teach you how to troubleshoot using logs. But for now, let's just read one line in sys log and parse what it says. The first field here is the time stamp when the event occurred. Pretty straightforward. But depending on the log, you might see a time format you aren't familiar with like a long string of numbers such as 1501538594. Time stamps found in a format like this are referred to as Unix or epoch time. At first, you might be baffled by this. Why would you represent time in this way? And just what exactly is the Unix epoch? The Unix epoch time is used to represent, then, it's the number of seconds since midnight on January first, 1970, a sort of zero hour for Unix based computers to anchor their concept of time. This means that 1501538594 represents the date, time, Monday, July 31st. 30314 Pacific Standard Time. Why midnight on January first, 1970? Is that date the birthday of Unix? Or does it mark some other significant event? The actual answer is much simpler. The original engineers of Unix at Bell Labs just picked it because it was convenient. So, don't be caught off guard if you see a time stamp like this. The next field is the host name of the machine the event occurred on. Next up is the service that the log event is referring to. And last is the event that occurred. In the next lesson, we'll show you some common troubleshooting tactics when using logs.

> WORKING WITH LOGS 
Yes, now you've made it to the really fun stuff. Let's use the information we learned about logs to actually investigate system issues. Take the scenario, you're working in IT support role and one of your users tells you that they leave their computer on all the time but they recently woke up to find that the computer had shut down. What do you do? Maybe you stay up through the night keeping a close eye on the computer not taking any breaks to use the restroom or even blink. You wait and wait and wait until the computer shuts off, or in a sane and normal world, you decide to just look through the system logs. Let's go with that option. So where do you begin? At first, logs can be really messy and daunting to look at. We'll talk about the techniques you can use to view logs, but rest assured, you'll never need to read a log line by line. The first thing you want to do when looking at a log is to search for something specific. But what if you're seeing issues within an application and you don't know where to start looking? Well luckily for us, our systems log information in a pretty standard way. If an application is getting a lot of errors, what do you think you can search for? That's right. The word error. What if you're seeing an issue with a specific application? What else do you think you can search for? If you guess the application name, you're right. You've already been able to filter out your logs to look for specific things that you might be seeing. Let's see this in action.
Play video starting at :1:49 and follow transcript1:49
Here, we can see the log results that have the word error in them. If you need to investigate issues that happen around a certain time, you can actually do that by checking the timestamps around that time. You may find the problem that's causing your issue this way or at least get a little closer to figuring out what it is.
Play video starting at :2:16 and follow transcript2:16
When you finally get to a juicy log portion that might help you uncover problems, you usually want to start looking at the output from either the top or bottom. Let's say you're seeing lots of errors. Each of these errors could be happening because of a root issue. If you resolve the root issue, you'll fix the cascading errors. Take a look at this. The log is riddled with errors but if we scroll up, we can see the one error that spun up all these others. If we fix that, then the other issues will most likely be fixed. On the flip side, if you aren't seeing any indicators of a problem in a log, you might want to work from the bottom until you come across a clue. Your system could be functioning normally but when you scroll down to read the output, you see a log entry that may be related to your problem. Another troubleshooting tactic you can use with logs is to check them in real time. Let's say every time you launch a specific application, it does something abrupt and shuts off. Sure, you can check the logs and post and keep track of your time or you can look at the logs in real time. To do this, we can use one of the commands we learned in a very early lesson, tail. Let's take a look at what this means. We're going to tail -f the syst log file and keep it in an open window.
Play video starting at :3:36 and follow transcript3:36
Then we're going to turn off Bluetooth to show you the events it's logging. Now we can see Bluetooth logging data in real time. Look at that, we've come full circle. I told you those commands would come in handy. Using these simple log tactics will help you throughout your career as an IT support specialist. You've certainly covered a lot so far. Now, you've picked up how to troubleshoot using logs, too. Logs will be one of your best friends when you're faced with a problem machine that leaves no obvious clues. Talk to the logs and listen to what that sweet, sweet love voice is telling you. You'll discover the problem in no time.

