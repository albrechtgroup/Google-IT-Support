> WINDOWS: DEVICES AND DRIVERS 
An important piece of software that we've talked about, but haven't really seen in action, is a driver. Remember that a driver is used to help our hardware devices interact with our operating system. In this lesson, we're going to talk about device drivers and how to manage them. First, let's talk about how to manage the devices that our computer sees, and then we'll go over how we install drivers for them. In Windows, Microsoft groups all of the devices and drivers on the computer together in a single Microsoft management console called the Device Manager. You can get to the Device Manager in a couple of different ways. You can open up the Run dialog box and type in devmgmt.msc. Or you can right-click on This PC, select Manage, and click on the Device Manager option in the left-hand navigation menu. I'm just going to open it up from here.
Play video starting at :1:3 and follow transcript1:03
Most devices you've got on your computer will be grouped together according to some broad categories by Windows. So any displays you might be using with your computer would show up under the Monitors section in the Device Manager.
Play video starting at :1:20 and follow transcript1:20
Like so. This grouping usually happens automatically when you plug in a new device. It's part of the plug and play system that Windows uses to automatically detect new hardware plugged into your computer. It then recognizes and installs the appropriate software to manage it.
Play video starting at :1:37 and follow transcript1:37
If you're interested, you can read more about the PnP system in the supplementary reading. We'll give you an overview of how this works too, so you can get a feel for it. When you plug a new device, like a mouse or keyboard, into your computer, the Windows operating system will go through a few steps to try and get it working. Most vendors or computer hardware manufacturers will assign a special string of characters to their devices called a hardware ID.
Play video starting at :2:1 and follow transcript2:01
When Windows notices that a new device has been connected, the first thing it'll do is ask the device that's been plugged in for its hardware ID.
Play video starting at :2:9 and follow transcript2:09
Once Windows has the new device's hardware ID, the OS uses it to search for the right driver for the device. It looks for it in a few places, starting with a local list of well-known drivers. Then it goes on to Windows Update or the driver store if it needs to expand the search. Sometimes the device will come with an installation disk, which contains custom driver software and you can tell Windows to look there too. Finally, Windows will take the driver software it found and install it so you can use your new device. Although this process mostly happens automatically and behind the scenes, you can interact directly with the Windows drivers through the Device Manager console we mentioned earlier. You can expand any of the categories in the Device Manager to view the devices inside them, like so.
Play video starting at :2:59 and follow transcript2:59
You can also use the all-powerful Windows right-click to open up a menu with options to work with them.
Play video starting at :3:8 and follow transcript3:08
You can uninstall, disable, and update a device driver from this menu. You can also tell Windows to look for hardware changes like a newly plugged in device.
Play video starting at :3:18 and follow transcript3:18
Finally, if you choose Properties from the right-click menu, you can see some details about the device and its driver.
Play video starting at :3:28 and follow transcript3:28
Like its manufacturer and the driver version being used.
Play video starting at :3:32 and follow transcript3:32
If you're interested in accessing drivers through Windows CLI, check out the following reading for more info.

> LINUX: DEVICES AND DRIVERS 
Ubuntu has a slightly messier way of showing us device management. In Linux, everything's considered a file, even hardware devices. When a device is connected to your computer, a device file is created in the /dev directory. Let's take a look at this directory.
Play video starting at ::34 and follow transcript0:34
There are lots of devices in this directory, but not all of them are actually physical devices. For example, the /dev/null devices in here. We won't talk about all the device types in Linux because there are a lot of them. But we'll go over the more common ones you'll see, character devices and block devices. Character devices, like a keyboard or mouse, transmit data character by character. Block devices like USB drives, hard drives, and CD-ROMs transfer blocks of data. A data block is just a unit of data storage. Remember from an earlier lesson, that the first bit you see in an LS-L command is the type of file. So far, we've seen dash which stands for a regular file and a D which stands for a directory. But in this output, we can see we have a few other file types. Some of them have B for block device and C for character device. If you'd like to learn more about that other device types, you can check out the next supplemental reading. Let's look at some of the block devices we'll be interacting with in this course. You'll see a few files that start with /dev/sda or /sdb. SD devices are mass storage devices like our hard drives, memory sticks, et cetra. If you see an A after SD, it just means the device was detected by the computer first. So you might see something like /dev sda, /dev sdb, /dev sdc. Revisiting the /dev/null device, we can see it's considered a character device because it's used to transfer data, character by character.
Play video starting at :2:21 and follow transcript2:21
This is a pretty simple overview of device files. I left a lot of stuff out that you don't necessarily need to know now. If you want to learn more about the inner workings of devices in Linux checkout, you guessed it, the next supplemental reading. Let's talk about updating device drivers for Linux. With Windows, we were able to just click update driver and in most cases that works. In Linux, things are a little more complicated, and at the same time pretty easy. I'm not trying to be confusing. You'll see what I mean in a moment. Device drivers aren't stored in the /dev directory. Sometimes, they're part of the Linux kernel. Remember, that the kernel of our machine handles the interaction with hardware. The kernel is a really monolithic piece of software that has lots of functions including support for lots of hardware. These days, a lot of hardware support is built into the kernel. So when you plug in a device, it automatically works. But if there are devices that don't have support built into the kernel, they most likely have something called a kernel module. Well, what's this kernel module thingy? For a lot of developers, touching software like the Linux kernel is kind of intimidating. Instead, they can create kernel modules which extend the kernel's functionality without them actually touching it. So, if you need to install kernel module for a specific type of device, you can install the same way we've been installing all software in Linux. Keep in mind that not all kernel modules are drivers. We won't get into kernel modules, but if you'd like to read more, I've included a link to that as well in the next reading. Since we just need to get started and get hands-on with the operating systems, this should be more than enough. Let's keep moving.

> WINDOWS: OPERATING SYSTEM UPDATES 
You've made it to the last lesson in this module where we're going to cover the most important software, the operating system. We've already looked at how to install and maintain applications like a word processor, graphical editor, etc. Then we looked at how to install device driver software too. Now we're going to look at the core operating system updates. Spoiler alert, they work just the same way as every other software we've installed.
Play video starting at ::37 and follow transcript0:37
It's important to keep your operating system up to date for lots of different reasons. You want the newest features that your operating system has, and you want the security updates that your operating system needs. When your operating system manufacturer discovers a security hole in the OS, they do their best to create a patch for this hole.
Play video starting at ::55 and follow transcript0:55
A security patch is software that's meant to fix up a security hole. When you have an operating system update with security patches it's vital that you install those patches right away. The longer you wait the more prone you are to being effected by a security hole.
Play video starting at :1:10 and follow transcript1:10
As an IT support specialist, it's very common to routinely install operating system updates to keep your system up to date and secure.
Play video starting at :1:19 and follow transcript1:19
Windows usually does a great job of telling you when there are updates to install. The Windows Update Client service runs in the background on your computer to download and install updates, and patches for your operating system. It does this by checking in with the Windows Update servers at Microsoft every so often, you can learn more in the next reading. If it finds updates that should be applied to your computer it'll download them, if you decided to allow it to, more on that later. Once the download has completed, depending on your Windows Update settings, the Windows Update Client will ask you if it's okay to install the updates or just go ahead and install them automatically. This process usually requires a restart of your computer, which the Client performs after requesting permission. In versions of Windows before Windows 10, you can tell Windows to manage your updates in a few different ways. You could have the Windows Update Client install updates and patches that Microsoft releases automatically or can let Windows Update know that you want to decide whether or not you'd like to download and install them. You can even turn off updating entirely, but that's probably not a good idea for the security reasons we talked about. You can configure Windows Update by searching updates in the search box and going to Windows Update setting.
Play video starting at :2:37 and follow transcript2:37
From there, you can tell the Windows Update Client to check for new updates, look at the history of updates installed, or change the way that it'll download and apply patches by clicking into the settings section.
Play video starting at :2:51 and follow transcript2:51
From there, you can tell the Update Client how you want to manage your updates and even set a time when you want them installed.
Play video starting at :2:59 and follow transcript2:59
Windows 10 does things differently, instead of downloading a handful of independent updates that you can choose to apply or not apply to your computer, updates are cumulative. This means that every month a package of updates and patches is released that supersedes the previous month's updates.
Play video starting at :3:17 and follow transcript3:17
The idea behind this is that computers will need to download less stuff in order to be up to date. As an example of how this might be beneficial, think about a Windows machine that's been turned off for a while. When it boots up again after a long period of inactivity, it'll need to download all of the updates that it's missed and apply them. If it's been off for a really long time, this could mean it'll need to download and apply hundreds of updates. With the cumulative update model, a computer like that would only need to download the latest cumulative update, then be good to go.
Play video starting at :3:49 and follow transcript3:49
One downside to this is that in Windows 10, installing updates is no longer optional. You also can't pick and choose the updates you want to apply, since they're all rolled into one monthly release.
Play video starting at :4: and follow transcript4:00
Microsoft has announced that the update model in Windows 7 and 8 will also be moving in this cumulative package direction. So, Windows 10 users won't be alone.

> LINUX: OPERATING SYSTEM UPDATES 
In Linux, you've already learned how to update and upgrade software on your machines. When using the apt update and apt upgrade command, they may already install security updates for you. But when you run apt upgrade, it doesn't upgrade the core operating system. In windows, our OS package is Windows 10. In Linux, It's the kernel along with other packages. The kernel controls the core components of our operating system. Like our word processors, the kernel is just another package. The kernel developers regularly include security patches, new features, and fixes for bugs in their updates. If you want to get all these things, you should be running a new kernel. To first view what kernel version you have, we going to learn a new command called uname. The uname command gives us the system information. If you use the dash r flag for kernel release, you'll see what kernel version you have.
Play video starting at :1:5 and follow transcript1:05
You can see that I have kernel Version four point one on here. To update the kernel and other packages, we use our nifty apt command with the option full dash upgrade. Before running this command, remember to update your application sources with APT update. Sudo apt update. Now, we can run sudo apt full upgrade.
Play video starting at :1:42 and follow transcript1:42
If there's a new version of the kernel Available it will install it for us. Once you reboot the computer, you can start using it. You can verify the latest kernel is being used with the uname dash r command. We left out a few details about kernel installations and security updates, but this is a good start updating your system. If you're curious about learning the intricate details of kernel and Linux updates, check out the supplemental reading. With that, we've covered all the essentials to help you hit the ground running with software installation and maintenance. Great work. You learned how to install standalone packages, use package managers, and work with archives, device drivers, and core operating system updates. These skills will be super useful as an IT support specialist. Next, we're testing you again on both bashing Windows. When you finished, I'll see in the next module.

