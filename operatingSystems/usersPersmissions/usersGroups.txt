> USERS, ADMINISTRATORS AND GROUPS, OH MY!!
Welcome back. Now that we've learned how to navigate around the Windows and Linux operating systems, let's start setting up our computer for use by other people. As an IT support specialist, you'll be responsible for other people's machines. People will depend on you to help set up their machines, troubleshooting their issues, and so on. In this lesson, you'll learn how to manage multiple accounts on one machine. You'll also learn about the different permissions and access types, how to add and remove users, and the best practices to use when managing multiple users. It's common for a computer to have multiple users. On your home computer, you might have your parents, siblings, or children using the same computer. Your town, library, school, or other public places might also have computers with multiple users. Even though these machines have multiple user accounts on them, all users on a computer are isolated from others. This means that Kevin can't see Victor's files and folders, and vice versa. There are two different types of users, standard users and administrators. A standard user is one who is given access to a machine, but has restricted access to do things like install software or change certain settings. An administrator or admin is a user that has complete control over a machine. They can view anyone's account, change and remove anyone on the computer, and view every single file. You can have multiple administrators on a machine as well. On your personal machine, you're the default administrator because this gives you complete control over your system. After all, it is your machine. But on a public computer, the administrator is someone who actually runs and maintains the machine, like an IT support specialist, they can grant access for other users, install software, change restricted system settings, and perform other actions they deem appropriate. How terrible would it be if anyone who is using a public computer could just install software? The computers would be bloated, things would be out of place, and worst of all, they could be infected with malicious software. Users are put together in groups according to levels of access and permissions to carry out certain tasks. These tasks depend on what the computer's administrator considers appropriate. An administrator could give different access and settings based on the type of group a user is in. Let's say you're an administrator for your home computer, which everyone in the house uses. You put your parents in a group called Parents, and your kids in a group called Children. You don't want either of them to be able to install software, but you also want to add child safety restrictions on the children group. As the administrator, you're able to specify different permissions for both of these groups. So how do you differentiate what type of user you are, and what groups you're in on Windows and Linux? Well hopefully, you'd know this if you are an administrator of a computer. But if you don't, computers do a pretty good job of telling you. In the next few lessons, we'll see how we can view user and group information in Windows and Linux.

> WINDOWS: VIEW USER AND GROUP INFORMATION 
To view user and group information in windows, we're going to use the computer management tool if we search computer management in our application search and open it up, we'll see a window that gives us a lot of information.
Play video starting at ::29 and follow transcript0:29
We'll be using this application a lot throughout this course, so let's take some time to go over it. At the top of the sidebar, you'll see it says computer management local. This means we're managing a single machine locally. In an enterprise environment, you can manage multiple machines in something called a domain. A Windows domain is a network of computers, users, files, et cetera, that are added to a central database. If you're an admin of that domain, you can view those accounts and computers from any machine in the domain. We'll learn more about domains and how to manage them in our next course on system administration and IT infrastructure services. Underneath this menu, we have system tools. Let's do a run down of each of these sub menus. Task Scheduler: This lets you schedule programs and tasks to run at certain times, like automatically shutting off the computer at 11:00 pm every night.
Play video starting at :1:27 and follow transcript1:27
Event Viewer: This is where our system stores its system logs. We'll do a deep dive on this tool in an upcoming lesson.
Play video starting at :1:39 and follow transcript1:39
Shared folders: This shows the folders that different users on the machine share with each other. Remember how he said that other users can't view anyone else's files? That's not exactly true. If users store files on a shared folder, anyone who has access to that folder can view it. Local Users and Groups: This is where we'll be doing our user and group management. Performance: This shows monitoring for the resources of our machine like CPU and RAM.
Play video starting at :2:19 and follow transcript2:19
Device Manager: This is where we go to manage devices to our computer like our network cards, sound cards, monitors, and more.
Play video starting at :2:31 and follow transcript2:31
Under the storage menu, we have a sub menu for disk management. We use this when we talk about discs in a later lesson.
Play video starting at :2:43 and follow transcript2:43
Finally, the services and applications menu shows us the programs and services that we have available on the system. We can choose to enable or disable services like DNS here. All the essential settings that we as administrators need to change are found in the computer management tool. If you're a power user it's more efficient to use this than it is to go through the default settings application. Okay, let's get back to the task at hand. Let's see what kind of user account we have and what groups we're a part of. Let's go back to the local users and groups. Under users, we can see a few built in Windows accounts like guest and administrator.
Play video starting at :3:33 and follow transcript3:33
The local administrator account lets you log in using the administrator username and whatever the administrator password is on the computer. This account is disabled by default. Since this account has unfettered access on the computer, it can be dangerous to be logged into it at all times. For now, let's look at the account I'm in. Cindy, let's double click on this to see more information. Okay, let's do a rundown here. Under the tab general, we can see some basic information about the user along with some options. User must change password at next logon. Since I'm an admin, I can force other users to change their password. This is useful if I'm managing someone's account and their password was compromised. We don't want to risk someone else logging into their account, so we force them to change their password. User cannot change password. Password never expires. Account is disabled. Enabling or disabling an account means making it active or inactive. Account is locked out. This means a user account will not be able to log in. Maybe a disgruntled employee is looking to do malicious things. We can make it so that they won't be able to log into their computer. Under the member of tab, we can see which groups we're part of. I can see that I'm in the administrators group. Heads up that instead of being logged into a local administrator account all the time, you can be logged into your own account and use administrative powers when you need to. This is thanks to the help of UAC or user access control. This is a feature in Windows that prevents unauthorized changes to a system. These changes have to be approved by the administrator instead. Since I'm an administrator, I would do is enter in my password to confirm that I want to make a change. Finally, on the last tab, profile, you can change settings about your user profile, like where you want your home folder to be. This isn't terribly important on a local account, but it comes in handy when you're managing many users on a domain. Now if we go to the groups menu on the sidebar, it should look familiar.
Play video starting at :6:1 and follow transcript6:01
Just like the member tab, we can view which groups are available and who their members are. And that's how you view user and group information using the Windows GUI. Next, let's take a look at how to do the exact same thing using Windows-

> WINDOWS: VIEW USER AND GROUP INFO Using
  C.L.I.
We talked about using the CLI in-depth in the last module. We've seen how it can make our tests quicker when we modify files and folders. Now, we're going to start using commands to help us with other tasks on our system. Imagine you're working as an I.T. support specialist at a company and your boss asks you to check all the user information on 10 machines, to make sure that the local administrator account is not enabled. Sure you could search computer management in the search bar, click computer management local, look under system tools, click on local users and groups, then double click on the username of the computer to ensure that their local administrator account is enabled. Now, you just have to do that nine more times. There's a much faster way. You can just use the CLI to quickly see the list of users on the computer using the command Get-LocalUser.
Play video starting at :1:11 and follow transcript1:11
As you can see, it lists my user account, a few other users and a couple of other default accounts that are part of Windows. Here you can see that my local administrator account isn't enabled. That's way easier. What about groups? I bet you can guess, Get-LocalGroup will list the groups on the local machine. There are a whole bunch of groups but don't worry, these are all built-in groups. Each of them are important, but we aren't likely to make changes to most of them. One that we will make changes to is the administrators group. Remember, this group controls who has administrative access to the machine. It's important to know who's in this group since anyone in this group can make any change they want to the machine. We just saw in the GUI that we're in this group, but I wonder who else is? Let's see who's in this group with Get-LocalGroupMember, and I want to check the administrators group. We can see that the administrator user and my user are in the administrators group but no one else. Looks good to me. One last note, these local user and group PowerShell commands require that your running PowerShell 5.1 or newer. You may have noticed that I keep saying local accounts and local users. If your organization has a lot of Windows machines, it's very common to use active directory to manage user accounts in a central directory service. We'll learn more about active Directory accounts in our next course on system administration and I.T. infrastructure services. But let's focus on local accounts for now.

> LINUX: USERS, SUPERUSER AND BEYOND 
In Linux, user management access works just like it does in Windows. Different user types have different privileges and they can be grouped together with various access levels. There are a few differences in how Linux does labeling though. There are standard users and there are also administrators in Linux. There's also a special user called the root user. Don't get this confused with the root directory or slash. The root user is the first user that gets automatically created when we install a Linux OS. This user has all the privileges on the OS. They are the super user. There's technically only one superuser or root account. But anyone that's granted access to use their powers can be called a superuser too. Now, let's try and view the contents of a root restricted file. The file path has etc sudoers.
Play video starting at :1:5 and follow transcript1:05
We're getting an error, cat/ etc/ sudoers permission denied. The sudoers file is a protected file that can only be read by root. We can log in as root and then run this command, no problem. But it can be really dangerous to always be in root. Since root, like our local administrator account on Windows has unrestricted access on the machine. If we make even one mistake, we could delete or modify something important, and that's not good. So instead of logging in its root, we can tell the shell that we want to run this one command as root. So I'm so much to the Windows UHC feature. That's because it is. On Linux, we can do this with the sudo command or superuser do. So sudo cat /etc/ sudoers. Now, we're able to see the contents of this file. If you don't want to run sudo every time you need to run a command that requires root privileges, you can just use the su command or substitute user. This will allow you to change to a different user. If you don't specify user, it defaults to root. Now, you can see my prompt says root@cindy-nyc. Again, it's generally not a good guideline to stay logged in as root all the time. There are lots of critical services and files that can be mistakenly changed. If you need to log in as root, it's okay. But just be careful. Just going ahead and exit out of root for now and go back to my normal user. You can view who has access to run sudo by viewing the /etc/group file. This is also how you view memberships for all groups.
Play video starting at :2:43 and follow transcript2:43
This looks a bit different from the windows GUI. But you can see there are some similarities to the Windows CLI. It's actually pretty simple to read this file, even if you're not an expert yet. Each line represents a different group. Let's look at the seudo line.
Play video starting at :3:5 and follow transcript3:05
There are four fields here, separated by colons. The first field is the group name. In this case, it's seudo. Second field is the group password. We don't really need to specify a group password so it defaults to the root password. The X here means that the password has been encrypted and store in a separate file that we'll talk about in a later lesson. The third field is the ID of the group or group ID. When our operating system runs a task that involves a group, it uses a group ID instead of group name. Finally, the last field is lists of users in the group. What if you wanted to view the users on our machine? What do you think the file would be that stores that information? Unfortunately, it's not /etc/user. The file that contains user information is /etc/password.
Play video starting at :3:57 and follow transcript3:57
Wow, there's a lot more information on here and a lot more users. Most of these accounts aren't actually humans using the computer. They are a bunch of processes that are constantly running on a computer that we need to associate with a user. So our system has lots of users with different permissions that are needed to run these processes. Let's look at this first line here, which is an actual user we can log into root.
Play video starting at :4:24 and follow transcript4:24
We won't talk about all the fields since they aren't important. But the first three are relevant. The first field is the username and the second field is the user password. The password isn't actually stored in this file. It's encrypted and stored in a different file, just like our group ID password. The third field here is the user id or UID. Similar group IDS, user IDs or how our system identifies a user, not by the username. Root has a UID of zero. That's basically how you view users and groups in Linux.

> WINDOWS: PASSWORDS 
In this video, we're going to talk about an important part of having users on a machine, and that's working with passwords. Passwords add security to our user accounts and machines, they make it so that only Marty knows the magic secret to access her account and no one else's, not even the admin of the computer. When setting up a password, you want to make sure that you and only you know that password. Remember, if you're managing other people's accounts on a machine, you shouldn't know what their password is. Instead, you want the user to enter the password themselves. To reset a password in the gooey, let's go back to our computer management tool.
Play video starting at ::58 and follow transcript0:58
Under local users and groups, we're going to right click on a username like this account Sarah. Let's click on properties. Then from here, we're just going to check this box that says "user must change password at next log on", then apply and hit "OK." Then, when the user logs into the account, they'll be forced to change their password. If they forgot their password, you have the option to set a password for them manually, by right clicking and selecting set password.
Play video starting at :1:45 and follow transcript1:45
This has some caveats though, like losing access to certain credentials. You can read more about this option in the supplemental reading right after this video. To change a local password in power shell, we're going to use the DOS style net command. There's a native power shall command that can be used to set the password, but it's a little more complicated. It requires a bit of simple scripting to use. For now, we'll stick to the simpler, the less powerful net command. net does lots of different things, changing local user passwords is just one of them. If you want to learn more about what the net command can do, take a look at the documentation in the supplementary reading for the command. Since this is an old DOS style command, you can also use the slash question mark parameter to get help on the command from the CLI. To change a password for a user, the command is net user then the username and password.
Play video starting at :3:1 and follow transcript3:01
The best way to use this command, is to use an asterisk instead of writing your password out on the command line. If you use an asterisk, knit will pause and ask you to enter your password like so.
Play video starting at :3:18 and follow transcript3:18
Why is this approach better? Imagine you're changing your password and right at that moment someone walks behind you and glances over your shoulder. Your password isn't a secret anymore. You should also know that in many environments, it's common that the commands that folks run on the machines they use are recorded in a log file that's sent to a central logging service. So it's best that passwords of any kind are not logged in this way. Do you notice a problem with the asterisk approach though? That's right. If I change passwords for someone else using this command, I would know their password, and that's not good. Instead, we're going to do what we did in the GUI and force the user to change the default password on their next log on using the /logonpasswordchg:yes. So I'm just going to force Victor to change his password on the next log on. So, net user victor /logonpasswordchge:yes.
Play video starting at :4:23 and follow transcript4:23
The slash log on password change yes parameter means that the next time that Victor logs into this computer, he'll have to change his password. Sorry Victor.

> LINUX: PASSWORDS 
To change your password in Linux, all you need to do is run the PASSWD or password command. Let's try changing my password.
Play video starting at ::33 and follow transcript0:33
When you set a password it's securely scrambled then stored in a special privileged file called slash etc slash shadow. This file can only be read by Root, to keep away prying eyes. Even if you did have access, you wouldn't be able to descramble passwords found in here. If you're managing a computer, and you want to force a standard user to change their password, like we did in Windows, you can use the dash e, or expire flag with password, like this.
Play video starting at :1:5 and follow transcript1:05
This will immediately expire a users password and then make them set a new password the next time they log in.

> WINDOWS: ADDING AND REMOVING USERS 
Okay. Now that you know how to view information about users and the hierarchy of user permissions, let's learn how to add and remove users on a machine. To add a user, we're going to go back to our computer management tool.
Play video starting at ::28 and follow transcript0:28
Under local users and groups, we're going to right click and select New User.
Play video starting at ::40 and follow transcript0:40
From here, it asks us to set a username, a full name, and a password. Remember, that in order to use good password setting practices, we set a default password and then make the user change that password when they log in. So, we're going to go ahead and set a default password, and make sure the box for, "user must change password at next log on" is checked, and then click Create. So I'm just going to make a new user account for Elizabeth and have the password, and then just make sure that's checked, and hit Create. And that's how you create a new local user. To remove a user, we simply right click and select Delete. This gives us a warning message that says, user names are unique, and even if you delete the user and give them the exact same username, they won't be able to access their old resources. Once you confirm that you want to do that, just go ahead and click delete it. And that's how you remove a local user account. Adding and removing local user accounts from the CLI, is going to use the same net command that we use to change passwords, just with different parameters. Like before, there's a native power shell command, new dash local user, that requires a little bit of scripting to use. If you want to use new dash local user, check out the supplemental reading. Now, back to net. To add a new local user, we simply use the slash add parameter. If we add the slash add parameter to the same command we used before, it instructs net to create the account. We can still use the asterisk for the password to be prompted to enter a password. Let's test this out and create a new account for Andrea. So, net user andrea * / add. Now, let's list the user accounts to be sure it worked. So, Get-LocalUser. Sweet. There it is. Now, there's a small problem which you saw in the earlier lesson on passwords. This account is for Andrea, but we know what the password is. We don't want to know what the password is because that means we can log in as Andrea. We want to make sure that Andrea changes her password to something that we don't know. So, we're going to flag her account as requiring a password change using the slash log on password change yes parameter. So, net user andrea / logonpasswordchg:yes. Now you all know whather password is. You can actually combine these two commands that we ran to create a new account that requires a password change at first login. Let's create an account for Cesar. So, net user cesar pa5swOrd / add / logonpasswordchg:yes. Now, when we run the Get-LocalUser, we should see both of our new accounts. Sweet. And there it is. Cesar's new account has a password that you know and you can give it to him, but he'll have to change the password the first time he logs in. All right. Now let's remove these accounts that we just created. I'm going to show you how to do this using net, and using Remove-LocalUser. Both of these commands will do the exact same thing. So let's delete Andrea's account, net user andrea /del. This will delete Andrea's account. And using the Remove-LocalUser cesar, we can remove Cesar's account. Sweet, now it's gone. See how each of these options follows a pattern. The net user example, looks just like it did to create a new user account, except instead of adding an account, we deleted the account. In the second example, instead of getting, setting, or creating a new dash local user, we removed the account. As you continue to learn new CLI commands, you'll start to notice these sorts of patterns. Being able to identify these patterns will help you discover new things that you can do, and remember how to do things you haven't done in a while.

> LINUX: ADDING AND REMOVING USERS 
To add a new user in Linux, you can use the user add command. Sudo useradd juan. This will set up basic configurations for the user, and set up a home directory. We can verify that one is created, there. You can combine this with the password command to make the user change their password and log in. To remove the user, you can just use sudo userdelete juan. He's no longer on the list. Nice work. Next we'll dive into the wonderful world of permissions. See you there.

> MOBILE USERS AND ACCOUNTS 
Because most mobile devices are used by a single person, mobile operating systems handle user accounts a little differently than the other OS's we've talked about. Take a GPS unit and a vehicle, for example. You might never enter a username or sign in to the GPS unit at all. There are still user accounts in the OS that run the GPS device but you'll never have to see them or have to deal with them. On the other hand, think about a smartphone or tablet running iOS or Android. These devices will have you enter the username and password once when you're setting up the device, but then you're probably not have to reenter that password each time you want to use the device. The initial account that you use during setup is called the primary account. This account is used to create a user profile for you on the device. The user profile is like your user account in a mobile device. It contains all of your accounts, preferences, and apps. In iOS and Android, the primary account can be used to synchronize settings and data to the Cloud. When you replace the device or set up a new mobile device with a primary account that you've used before, you'll have the option to restore data and apps if any had been backed up to the Cloud. But don't worry about this yet. We'll talk more about synchronization and backups in a future video. Also an iOS and Android, a user profile can be signed into additional accounts. These could be additional email accounts, social media accounts or something else. If given permission, apps on the mobile device can use these accounts for single sign-on or SSO. This means that instead of those apps asking you for another username and password, they will allow you to authenticate using an account that you're already signed into. Those apps don't have access to your credentials but you can't let them use those credentials. Check out the security course to learn more about how SSO works. As an IT support specialist, you might help end users set up these accounts on their mobile devices but don't ever ask someone for their password. Always have the end user enter the password themselves and if anyone reveals their password to you, encourage them to change their password. Most mobile devices only support one user profile and they're designed to be used by a single person. Some Android devices do support multiple user profiles. To see how that works, check out the supplemental reading. Think about when you use a larger device like a desktop, laptop or a server that you have to enter a username and password to access. By default, most mobile operating systems don't ask you to re-enter your primary account password each time you want to use the device. This is convenient but it also means that anyone who picks up the device will have access to all of your personal and work data. Even if there's no private data on the device, the device may have access to confidential or privileged systems which can be just as bad. Mobile operating systems usually have safer ways to protect your data. You can set a device password, a pin or an unlock pattern on your device. Some smartphones use fingerprint sensors, facial recognition or other kinds of biometric data to grant access to the device. Biometric data is something about you that's unique to you, like a fingerprint or voice or a face. We'll talk more about biometric data in the security course. To protect business data, some organizations use mobile device management or MDM policies to require mobile devices to be locked. Mobile device management systems are used to apply and enforce rules about how the device has to be configured and used. We'll talk more about MDM in a future video.

