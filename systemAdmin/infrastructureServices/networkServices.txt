> FTP, SFTP, AND TFTP 
Now that we're a little more familiar with some of the common aspects of physical infrastructure, let's move onto network services. A network service that's commonly used in organization is a file transfer service. So why would you want to have a service dedicated to file transfer? Well, sure, you could probably carry around a flash drive and copy files to each machine you work on or even use a remote copy tools we learned in the last course, or you could essentially store huge files and transfer files from one computer to another using the Internet. There are a few different file transfer protocol services that are used today. Let's take a quick rundown of what's out there and what they do. FTP, in the second course of this program the, bits and bytes of computer networking, we mentioned FTP a.k.a the file transfer protocol. It's a legacy way to transfer files from one computer to another over the Internet, and it's still in use today. It's not a super secure way to transfer data because it doesn't handle data encryption. The FTP service works much like RSH service. Clients that want to access an FTP server have to install an FTP client. On the FTP server, we install the software that allows us to share information located in the directory on that server. FTP is primarily used today to share web content. If you use a website host provider, you might see that they have an FTP connection already available for use so they can easily copy files to and from your web site. SFTP, it's a secure version of FTP, so it makes sense to choose this option over FTP. During this SFTP process, data is sent through SSH and is encrypted. TFTP stands for trivial FTP. It's a simpler way to transfer files than using FTP. TFTP doesn't require user authentication like FTP, so any files that you store here should be generic and not need to be secure. A popular use of TFTP is to host installation files. One method of booting a computer that we haven't discussed yet is PXE or PXE boot, which stands for preboot execution. This allows you to boot into a software that's available over the network. A common use case for organization that want to install software over a network is to keep operating system installation files in a TFTP server. That way, when you perform a network boot, you can be automatically launched into the installer. This is a lot more efficient than having to carry around a USB with an operating system image. You can learn more about PXE boot in the next reading. Depending on your usage of file transferring services, you might want to weigh the option we mentioned. We encourage you to read about popular FTP clients using the supplemental reading. If you just want to share files between your computers in a secure way and have a nice directory where you can access all the shared files instead of transferring them to your machine, you'll want to look at network file storage services instead. We'll discuss those in the upcoming module.

> NTP 
One of the oldest Internet protocols in use today is the network time protocol or NTP. It's used to keep the clock synchronized on machines connected to a network. You've probably seen NTP implemented in your personal life if you've ever been in an airport. Airports utilize synchronized clocks systems, and many of their systems use NTP. This is because the information that you see on your departure and arrival screen has to match the time that the air traffic control team sees for their airplanes. If only NTP could solve for airport delays. Anyway, in the IT world, machines need to have accurate time across a network for a lot of reasons. There are some security services like Kerberos and network authentication protocol that depend on the time being consistent across the network to work. You'll learn more about that in the IT security course coming up. It is important to keep the time consistent and accurate across your company's fleet. You can't depend on the hardware itself to keep consistent time, so you might want to set up an NTP server. There are different ways that an IT support specialist or sysadmin can do this for an organization. You can use a local NTP server or a public NTP server. To set up a local NTP server, you can install NTP server software on your management server. Then, you install NTP clients on your machines and tell those computers which NTP service to sync their time to. This is a great option because you can then manage the entire process from end to end. The other way to set up NTP is to use a public NTP server. Public NTP servers are managed by other organizations that your client machines connect to in order to get synchronized time. This is an awesome way to utilize NTP without having to run a dedicated NTP server. But if you have a large fleet of thousands of machines, it's better etiquette to be running your own NTP servers. Another good practice is to run your own NTP server. Then, have that point to a public NTP server. This makes it so that you don't connect all your clients to a public NTP server, and you don't have to measure time synchronization. Whether you run your own NTP server, or you use a public one, NTP is an important network service that you should definitely integrate into your own fleet.

> NETWORK SUPPORT SERVICES REVISITED 
There are a few network services that are used internally in an IT enterprise environment, to improve employee productivity, privacy and security. While they're pretty common, you might not encounter them in small organizations. We discussed these services in course two on networking, but let's do a refresher. We're sure that you encounter them at some point in your IT career. There are Intranets and Proxy servers. An Intranet is an internal network inside a company. It's accessible if you're on a company's network. Intranets can provide a wide range of information, and are meant to improve productivity by giving employees a greater medium to share information. Think of it like the company's website, that's only accessible to people on the company network. On this site documentation can be centrally located, teams can post news updates, employees can write in forums and start discussions and more. Intranets are most commonly seen in large enterprises, and can be incredibly valuable tool for employee productivity. Another internal support service that's widely used is a proxy server. Proxy server acts as an intermediary between a company's network and the Internet. They receive network traffic and relay that information to the company network. This way, company network traffic is kept private from the Internet. The internet gets traffic through a Proxy server, but it doesn't know where it originally came from. It only knows the proxy. Proxy servers can also be used to monitor and log internal company network activity. They can be configured, so certain websites are filtered from being accessed. Proxy servers are useful for fighting privacy and security on the Internet, and regulating access inside a company. In the next few lessons, we'll talk about what are probably the most essential network services DNS and DHCP.

> DNS 
We did a deep dive in DNS, or domain name system in the networking course. If you need a refresher on it, make sure to review the material there. As a super quick recap, DNS is what maps human understandable names to IP addresses. It's an important network service to set up and maintain when managing a company's IT infrastructure. If you don't set it up correctly, no one will be able to access websites by their names. We don't really have to think about DNS on our personal computers. When you connect a brand new machine to the Internet and start typing in the web address, it just works automatically. You don't have to type in IP address or anything, but something is happening in the background. When you connect to a network, you're using the DNS server address that was provided by the router you connected to. It updates your network setting to use that network server address, which is usually your ISP's DNS server. From there, you're able to access pretty much any website. So why do you need to set up your own DNS service if DNS just works out of the box? Well, there's two reasons. First, if you're running a web service like a website, you want to be able to tell the Internet what IP address to reach your website at. To do that, you need to set up DNS. The second reason is that you probably want to work on your server or user machines remotely. In theory, you could remote access into them through an IP address but you could also just use an easy to remember host name. To do that you need DNS to map the IP address to the host name. In the next couple of lessons, we'll discuss what's needed for DNS setup for websites and internal networks.

> DNS FOR WEB SERVERS 
You might remember that we can use a web server to store and serve content to clients that request our services. We'll probably want to store website content on our web server. If clients want to reach our website, we need to set up DNS so that they can just type a URL to find us. So, let's talk about how DNS gets set up for a website. First, we need a domain name. We can buy a domain name like SettingUpDNSIsFun.example.com. We can purchase domain names like this from companies called domain registrars, like GoDaddy.com, or BluHost.com. Once we have our domain name, we want to point our website files to this domain name. Our website files can be stored on a cloud hosting provider, or we can decide to control this ourselves and store it on our own servers. Typically, domain registrars also provide cloud hosting services but they can charge you a monthly fee to host your web files for you. Protip, if you don't want to utilize cloud hosting services, you can just run your own web server. Don't forget, there are always pros and cons to hosting a service yourself or offshoring it somewhere else. If you're the sole IT support specialist for an organization, make sure to weigh all your options before committing to an infrastructure service. Let's assume that we do want to host our website files ourselves. From here, we still need to point our new domain name to where web content is located. We can do this in two ways. Most domain registrars can provide you with DNS settings and you can give the IP address of where your content is stored. If you decide not to use your domain registrar to host DNS for you, then you have to set up an authoritative DNS server for your website. Remember from our discussion in course 2 that authority DNS servers are the DNS servers that know exactly what the IP address is for the domain name. Since we own the domain name and host our web content ourselves, it makes sense for us to have the DNS servers that know that information.

> DNS FOR INTERNAL NETWORKS 
The other reason we might want our own DNS servers is so we can map our internal computers to IP addresses. That way, we can reference a computer by name, instead of IP address. There are a few ways we can do this. One is using a local host file which contains static IP addresses to hostname mappings. Let's take a look at an example of this. Remember, that we learned that hosts files and networking allows us to map IP addresses to hosts things manually. In Linux, our host file is code etc/hosts. It has an IP address that points to 127.0.0.1 which points to a name called localhost. This just references back to the computer. Localhost is commonly used as a way to access a local web server. We'll talk about web servers in an upcoming module. So for now, let's not worry too much about localhost. Instead, if I change this IP address mapping to www.google.com, then save and open a web browser, and type www.google.com, it won't take me there. Let me show you that. So I'm going to go ahead and change my localhost to www.google.com. I'm going to save this. Open my web browser to www.google.com, and as you can see, it didn't take me anywhere. It just takes me back to my local computer. This is because a DNS query first, checks our local host file, then our local DNS servers. So, if there's an entry for google.com in my host file, you go to that IP address instead. Let's say I wanted to access Natalie's computer at 192.168.15 and her host name is catlady.examplecompany.com. I would have to enter this in my host file for every single computer in my fleet. That's definitely not a scalable option. So, what's our next choice? We can set up a local DNS server that contains all the organizations computer names mapped to their IP addresses. This is a more central storage location for this information. Then, we change our network settings for all our computers to use as DNS server instead of the one given to us by our ISP. Finally, let's look at one of the last DNS option we can use for an internal network. It can be integrated with a directory service which handles user and machine information in its central location like, active directory and LDAP. Once we set up DNS in our directory service, it will automatically populate with machine to IP address mappings. So, there's no need to enter this information in manually. We'll talk more about these directory services in the later module. And voila, that's an overview of why you need the DNS along with your options for configuring them. We won't dive too deeply into the technical details of setting up a DNS server, but if you're interested in learning about which DNS software to use, there are a few powerful options like Bind or powerDNS. I bet you can guess where you can read more about them. In the supplemental reading. One thing about DNS, that we haven't discussed is what to do if we use something like DHCP, which doesn't use static IP addresses. Don't worry, we'll cover this in the next lesson.

> DCHP 
Another network service that will make you a job in IT support easier is DHCP, Dynamic Host Configuration Protocol. Either refresh on DHCP, just check out the DHCP lessons and networking course. When managing IT infrastructure, and you want to connect a computer on a network, you have two options. You can grant it a static IP address or give it a DHCP assigned IP address. When you use a static IP address, you have to keep track of every IP address you assign a computer and manually entered in the network settings. If you enable DHCP, your computers will be leased an IP address from a DHCP server. They'll automatically get IP addresses, and you don't have to worry about manually setting addresses. If you ever decide you need to expand your IP address range, you don't have to change anything on the client machines either, it just happens automatically. To configure a DHCP server, you need to figure out which IP range you can use to assign IP addresses. If you want to integrate with DNS, you need the address of your local DNS servers. What Gateway you should assign, and the subnet mask that gets used. Once you solve the DHCP sever software, you had to configure the settings with this information. Different DHCP server software manufacturers have different configuration setting layouts, so you have to investigate the specific one you want to use. There are a lot of popular DHCP server software you can use for this. Windows Server versions come with DHCP sevice built-in, but you can read more about the options in the next reading. Once you turn on your DHCP server and your client is set to receive DHCP addresses instead of static IP addresses, you should have working DHCP settings. In the last lesson, we talked about how DNS ties in with DHCP. Well now in a DHCP configuration settings, we can specify a DNS server locations. The two servers then sync up and when DHCP leases out new addresses, DNS updates IP address mappings automatically. That's a super quick overview how DHCP servers are configured. Hopefully you can now see why DHCP and DNS are critical network services for your organization.

