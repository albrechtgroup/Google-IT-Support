> Intro 
You've already learned about the hardware, operating systems, and software layers of the computer architecture model. Now it's time to learn about the most important layer, the user layer. Troubleshooting problems and solid communication with users, maybe one of the most challenging parts of your job as an IT support specialist. But by the end of this module, you'll know the best way to handle them. Fixing problems and creating positive interactions with people, are two fundamental skills that can be applied to almost any situation in the IT world and beyond. Knowing how to analyze an issue, identifying the causes and effects, and use the information to find potential solutions are skills that everyone from I.T. support specialists, to doctors can use. Hi, I'm Marti Clark, and I'm a manager with Google's internal I.T. support program. Even though I grew up around technology and worked at my university's helpdesk, going into tech wasn't something that was encouraged by my teachers or my family. Now, as a manager, I try to encourage all techs I work with to follow their passion. It's this passion that help others grow, and my love for technology that led me here. Helping people with technology is both a rewarding and challenging endeavor. I encourage my team to take advantage of their work with users, to spin up ideas, solutions, and opportunities for improvement. The technical aspects of problem solving are super useful. But don't forget the real reason most technology exists, is to improve people's lives. Whether it's the routing algorithm that form the backbone of the Internet, or the software tools that let people create amazing art, the ways that people interact with technology are central to IT. As an I.T. support specialist, you're uniquely positioned to combine technology and people know how to make those interactions better, and make a difference in people's day to day lives.

> ASK QUESTIONS 
How would you respond if I asked you, "Do you know how long it'll take me to get to the bank?" You'd probably ask, "Where are you?" "Where's the bank?" "Are you walking, driving, biking?" But if you just guess the details of my situation to direct me to the bank, your response would be a day late and a dollar short. It seems like such a natural thing to ask questions and gather information to solve a problem, but it's usually one of those most overlooked steps in troubleshooting. Troubleshooting is the ability to diagnose and resolve a problem. One of the most difficult skills to acquire in an IT role isn't technical knowledge, but effective troubleshooting, whether that's helping someone face-to-face or remotely. It's not specific to the IT world either. We use troubleshooting skills every day. My car is broken. The light bulb went out. I feel sick. Imagine if you went to your doctor and said, "I feel sick," and without any other information, he gives you a prescription for allergy medicine. Time to find a new doctor. While this might seem far-fetched, this can happen pretty often in the IT world. We're so in the habit of fixing things that sometimes, we try to fix something without diagnosing it first. We're going to give you the tools you need to develop good troubleshooting habits. No matter how big or small the problem is, the first thing to do in troubleshooting is ask questions. There are a lot of factors that can cause a problem. You want to make sure you gather all your data before you start to tinker with it. Over the next several videos, we're going to demonstrate real world, in-person, and remote troubleshooting scenarios. For the in-person scenarios, you'll meet Gail and Marty. And yes, we have another Marty joining us, but he spells his name with a Y, and I spell mine with an I. Confusing, I know. Please keep in mind these are not professional actors. We want to give you the opportunity to see how these different scenarios would play out in real world settings. Let's look at a quick scenario of a not-so-awesome troubleshooting interaction, and an awesome one. My computer is broken. Oh, this looks bad. I think you're going to need a new computer. It's going to be about a 1000 bucks. My computer is broken. Oh, okay. Can you tell me a little bit more about how it's broken? Does it turn on at all? Has there been any damage to it lately that you know of? Well, when I hit the power button, I hear a "ding," but nothing comes up on screen. Oh, okay. Can I take a look? Sure. Okay. Let me just see what's going on here. You know what? The brightness was turned down. These brightness buttons are a little bit fiddly, and it's easy to hit them by accident. So, there you are. Great. Thank you. You're welcome. If we didn't ask follow up questions, we wouldn't have realized the issue was something as small as a screen being dim. So, it's important that you're able to gather enough information to start troubleshooting an issue, whether it's big or small. With a little digging, we're able to understand the situation and effectively troubleshoot the issue. What's also really important to call out from the scenario is the tech didn't make the user feel silly for not realizing the screens brightness was down. Can you think about a time someone made you feel silly or even dumb? It's a pretty terrible feeling. So don't be that person that does it to someone else. Remember, IT support is about working in the service of others. Always try to create a positive experience for the user. We'll deep dive into customer service later on. In the meantime, I'll see you back in the next video on isolating the problem.

> ISOLATING THE PROBLEM 
Now that we have the ask questions approach nailed down, let's cover another effective troubleshooting method. Isolating the problem. The goal of this method is to shrink the scope of that potential issue. Let's start with a simple game. I have a number I'm thinking of that's less than 100. Can you figure out what it is? You have five questions you can ask me. As you might have guessed, just guessing a number isn't the way to go. Is it five? No. Is it seven? No. Your odds of figuring it out this way are super low. Instead, you should be shrinking the scope of where the number could be. So, you could ask, is it greater than 50? No. Okay. So, we know the number is 50 or less. We've just isolated our problem and cut down half of the answers we started with. To narrow the scope further, you could ask, is it greater than 25? Yes. Is it greater than 38? Yes. Is it lower than 45? Yes. Is the number 42. Yes, the number is 42. Nice work. The power of isolating a problem can quickly and effectively help you figure out where the issue lies. The isolate the problem method is meant to shrink the scope of your problem, so that you know you're looking in the right area. After you continually isolate the problem, you'll eventually end up at the root cause. Root cause is the main factor that's causing a range of issues. Finding root cause is a critical concept in IT support, because it means that you're able to prevent an issue from happening again and again to multiple users. Sometimes the root cause can be difficult to find, an extremely obscure. Don't give up if it isn't immediately obvious. Discovering root cause may be tedious, but it's well worth the effort. Now, let's take a look at a not-so-good and a good example of isolating a problem. Hi Marty, I can't get my email to work on my laptop. Hi Gail. I'd be happy to help with that. Somebody came in the other day with the same problem. Let's uninstall and reinstall the application. It still doesn't work. Hey Marty, I can't get my email to work on my laptop. Oh hey you Gail, sure I'd love to take a look at that. Have you tried checking your mail on your phone, or tablet, or something like that? No, it doesn't look like that's working either. Let me try. Wow. You know I can't get any either. Let me look into this for a sec. It appears that the email server is down. The notice says that it's going to be down for about another hour. How about we wait an hour, try again, and if you're still having problems we can dig deeper. Okay. Thanks Marty. You're welcome Gail. As you can see, it's vital to use the isolating the problem method to decrease the scope of the issue. If you can rule out a problem area to look at, you can troubleshoot more efficiently.

> FOLLOW THE COOKIE CRUMBS 
Another effective troubleshooting method is called Follow the cookie crumbs. What purpose does this serve, besides making me want to devour a cookie? Well, this method requires you to go back when the problem first started and work forward from there. You would be surprised how much information you can learn from asking, when did this problem start? Can you help me with my phone, my fun cat app stopped working. Sure. Now what do you mean by stopped working? Well, when I tap on the app, it starts to load and then it crashes. Well, take a look here. Okay, let us try reinstalling the app and see if that helps. It still crashes. I need my fun cat app. Can you help me with my phone, my fun cat app stopped working? Sure, I would be happy to. Can you tell me a little bit more about how it stopped working. Well, when I tap on the app it starts and it just crashes. That is not good. When did it start? Have you changed anything since that time? Well, it worked last night and I was playing around with it until it started to update and this morning it just didn't work. It might have something to do with the update. Let me take a look into it. Okay, it looks like there was a bug in the update. We can roll back to an earlier version and see if that helps. Oh cuddlier peanut, I missed you. The user can give you information about what they remember but the systems you work with can also offer insightful information. In the earlier lessons about operating systems, we talked about logs. Remember that logs are like your system's diary, they keep information about dates and events that happened on the system. You can dig through logs at the exact time that a failure happened and you may find some defining events that could have caused your issue. We will get into logs in more detail in another course. Error messages are super helpful indicators that can point you in the right direction. Lots of times, a single error will be lost in a sea of errors. It is best to start from the very first error which may be causing a cascade of errors. By fixing the root error, you will correct all the other ones in the process. Some errors don't require extra digging, like a 404 not found error. You might see on websites that have been moved or deleted or permission denied error when accessing a protected file. Let's take a look at this log. I see an error message here at the bottom, do you think it makes sense to try and figure out this error message and resolve it? You might find yourself spending all day trying to fix these little holes. Let us backtrack up the log a bit instead. Oh look, we can see where an error first occurred. Let's try to fix this and now our system is not yelling at us anymore.

> START WITH THE QUICKEST STEPS FIRST 
We've got some great questions to understand our problem. We've isolated our problem to an effective area and looked at our cookie crumbs. Now it's time to start fixing the issue. In the I.T. world, as in life, problems don't always have one right answer. When you troubleshoot an issue, you're essentially trying to isolate it to the root cause. To help you isolate an issue, you need to try some remediation steps. If they don't work, then you can rule those out as the cause. So what's next? Here's where the Start-with-the- quickest-step-first method comes into play. We want to get to a root cause effectively. But sometimes, there are multiple options we can use to isolate something. So how do we know which option to try first? It's pretty simple. Try whatever's fastest first. I'm having a really weird issue with my software when I start it. It doesn't do anything and I just installed it. Interesting. It might have gotten corrupted during installation. Let's reinstall it again. It still does the same thing. I'm having a really weird issue with my software when I start it. It doesn't do anything. And I just installed it. Do you have to remember if you restarted the computer when you installed it? Oh, it works now. It's possible that in this scenario, a software reinstall could fix the issue. It's also possible that a restart was the solution. Since you can test a restart faster than a reinstall, you should test the restart first. You want to be able to troubleshoot and resolve issues effectively and efficiently. So remember to start with the quickest of first. Your time and your users time are important.

> TROUBLESHOOTING PITFALLS TO AVOID 
You've gained a lot of great foundational troubleshooting skills. But there is some common pitfalls that you should try to avoid in order to be at the top of your troubleshooting game. As an IT support specialist, you'll sometime encounter the same issue over and over again. Before the next issue comes in, you may find yourself using your muscle memory to fix the issue. Pitfall #1, going into autopilot. Make sure you don't default to autopilot mode, moving through issues out of habit and without careful thought. More often than not there are small variables that change the problem you're seeing entirely. Ask questions and gather data so you can fully understanding an issue. This takes less time than having to redo some sloppy work you did in autopilot mode. Pitfall #2, not finding the root cause. It's very easy to get distracted by small problems that pop up. But it's super important to remember there's probably a very big problem causing all these small problems. Spend a little extra time investigating the issue instead of trying to fix all the small holes. If you're trying do a quick fix, it's tempting to wipe a system and start from scratch. This approach is kind of like using a hammer when a surgical scalpel might be a more appropriate tool. Let's say a user isn't able to access a particular website. Re-imaging the system isn't a great solve. It doesn't get to the root cause, and it doesn't help further your own knowledge. Investigating the problem of it, testing out possible issues and solutions incrementally, and identifying the root cause can end up saving a lot of time and effort in the end, and it feels really empowering as an IT support specialist. And with that, you'll be able to go out in the real world and use your new skills to methodically troubleshoot an issue.

